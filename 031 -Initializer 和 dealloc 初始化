1.推荐的组织代码方式
  dealloc方法放在实现文件的最前
  init 应该跟在dealloc之后,
       如果有很多初始方法指定初始化方法应该放在最前面,间接初始化方法放在后面
       这样更具有逻辑性.
2.为什么设置self 为[super init]的返回值?
  Objective-C的对象分两步创建,这意味着申请内存和初始化分为两步  alloc 和 init
  alloc 负责创建对象,这个过程包括分配足够的内存保存对象,
        写入isa指针,初始化引用计数以及重置所有实例变量
  init  负责初始化对象,这意味着使对象处于可用状态,
        这通常是为对象的实例变量赋予合理有用的值
  
  alloc方法返回一个有效的未初始化的对象实例,
       每一个对这个实例发送的消息会转化成一次objec_msgSend()函数调用,形参self是的实参是alloc
       返回的指针,这样self在所有的方法的作用域内都能够访问,注意NSObject在实现init时,只是简单的
       返回了self
  init的约定的重要部分:这个方法可以通过返回nil,告诉调用者,初始化失败.
      这样我们就能理解,为什么要调用self = [super init] 当对象初始化失败的时候,那么假定你处于一个不稳定
      的状态,因此在你的实现中不要继续你的初始化并且也返回nil,如果不这样做,你可能获得一个不可用的对象
      他的行为是不可控的,最终坑能导致你的程序崩溃.

3.init 方法被调用的时候可以通过重新给self赋值来返回另一个实例,而非调用那个实例,例如类簇
  还有一些cocoa类为相等的(不可变)对象返回同一个实例
  
