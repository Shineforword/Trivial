1. designated initializer 指定初始化
   secondary  initializer 间接初始化
2. 指定初始化方法提供所有的参数
   间接初始化是一个或多个,并且提供一个或者多个参数来调用的初始化方法.
3.一个类应该有且只有一个指定初始化方法,其他初始化方法应该调用这个指定初始化方法(有例外)
  这个分歧要求那个初始化函数需要被调用.
  在类继承中调用任何一个designated初始化的方法都是合法的,而且保证所有的指定初始化方法,
  在类的继承中是从祖先(通常是NSObject)到你的类向下调用的.
4.实际上这意味着第一个执行的初始化的代码是最远的祖先,然后从顶向下的类继承,所有类都有机会执行
  它们特定的代码,这样,你在做特定初始化工作前,所有从超类继承的东西都是不可用的状态.
  虽然和没有明确的规定,但是所有Apple的框架都保证遵守这个约定.你的类也应该这么做.
5.当定义一个类的时候,有三种不同方式
  1>不需要重载任何初始化函数
  2>重载指定初始化方法
  3>定义一个新的指定初始化方法
6.第一种方案是简单的:你不需要增加类的任何初始化逻辑,只需要依照父类的指定初始化方法
  
