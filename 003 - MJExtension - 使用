1> MJExtension 的功能
 ①字典（JSON） --> 模型（Model）
 ②模型（Model） --> 字典（JSON）
 ③字典数组（JSON Array） --> 模型数组（Model Array）
 ④模型数组（Model Array） --> 字典数组（JSON Array）
 
2>MJExtension和JSONModel、Mantle等框架的区别:
  1. 转换速率：最近一次测试表明：MJExtension > JSONModel > Mantle
  2.具体用法：
  JSONModel：  要求所有模型类必须继承自JSONModel基类
  Mantle：     要求所有模型类必须继承自MTModel基类
  MJExtension：不需要你的模型类继承任何特殊基类，毫无污染，毫无侵入性
3>如何使用MJExtension
方法一：cocoapods导入：pod 'MJExtension'
方法二：手动导入：导入主头文件：#import "MJExtension.h"

4>
最简单的字典转模型
typedef enum {
    SexMale,    
    SexFemale} Sex;
@interface User : NSObject
@property (copy, nonatomic) NSString *name;
@property (copy, nonatomic) NSString *icon;
@property (assign, nonatomic) int age;
@property (assign, nonatomic) double height;
@property (strong, nonatomic) NSNumber *money;
@property (assign, nonatomic) Sex sex;
@end

NSDictionary *dict = @{
                        @"name" : @"Jack",                 
                        @"icon" : @"lufy.png",               
                        @"age" : @20,               
                        @"height" : @"1.55",               
                        @"money" : @100.9,               
                        @"sex" : @(SexFemale)            
};

// 将字典转为User模型
User *user = [User objectWithKeyValues:dict];
NSLog(@"name=%@, icon=%@, age=%d, height=%@, money=%@, sex=%d", user.name, user.icon, user.age, user.height, user.money, user.sex);
// name=Jack, icon=lufy.png, age=20, height=1.550000, money=100.9, sex=1
